AWSTemplateFormatVersion: 2010-09-09

Parameters:

  InstanceType:
      Description: Seleccione que tipo de EC2 desea desplega
      Type: String
      Default: t2.micro
      AllowedValues:
        - t2.micro
        - t2.small
        - t2.medium
        - t3.micro
        - t3.small
        - t3.medium
        - m5.large
        - m5.xlarge
        - m5.2xlarge
        - c5.large
        - c5.xlarge
        - c5.2xlarge
        - r5.large
        - r5.xlarge
        - r5.2xlarge
        - i3.large
        - i3.xlarge
        - i3.2xlarge
      ConstraintDescription: Seleccione un tipo válido de instancia.
      
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Nombre de un par de claves EC2 existente para habilitar el acceso SSH a la instancia.

  VolSize:
    Type: Number
    Description: Asigna el tamaño del volumen que usara el template
    Default: 8
    AllowedValues: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    ConstraintDescription: El tamaño solo puede ser entre 8 a 20 GB
  
  PortFromSg:
    Description: Asigna el rango minimo de puerto para tu security group
    Type: Number
    MinValue: 10
    MaxValue: 9999
  
  PorToSg:
    Description: Asigna el rango maximo de puerto para tu security group
    Type: Number
    MinValue: 10
    MaxValue: 9999

  AvaZones:
    Description: Asigna las zonas de disponibilidad para tu ASG
    Type: List<AWS::EC2::AvailabilityZone::Name>

Mappings: 
  RegionAmiMap: 
    us-east-1: 
      Ub22Ami: "ami-053b0d53c279acc90"
    us-west-1: 
      Ub22Ami: "ami-0f8e81a3da6e2510a"
    us-east-2: 
      Ub22Ami: "ami-024e6efaf93d85776"
    us-west-2: 
      Ub22Ami: "ami-03f65b8614a860c29"
    ap-southeast-1: 
      Ub22Ami: "ami-0df7a207adb9748c7"
    ap-northeast-1: 
      Ub22Ami: "ami-0d52744d6551d851e" 

Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub "${AWS::StackName}-launch-template"
      LaunchTemplateData:
        #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings 
        BlockDeviceMappings:
          #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html
        - DeviceName: /dev/sdh
          Ebs:
            #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html
            DeleteOnTermination: True
            Encrypted: False
            VolumeSize: !Ref VolSize
            VolumeType: gp3
        IamInstanceProfile: 
          Arn: !GetAtt
            - IamInstanceProfile
            - Arn
        ImageId: !FindInMap [RegionAmiMap, !Ref "AWS::Region", Ub22Ami]
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyPair
        SecurityGroups: 
        - !Ref InstanceSecurityGroup
        UserData: 
          Fn::Base64: 
            !Sub |
              #!/bin/bash

              apt update
              apt install apache2 -y
              systemctl start apache2
              systemctl enable apache2

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref PortFromSg
          ToPort: !Ref PorToSg
          CidrIp: 0.0.0.0/0

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Join [ -, [ !Sub "${AWS::StackName}", instance, profile ] ]
      Path: "/"
      Roles:
      - !Ref RootRole

  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !Ref AvaZones
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MaxSize: '1'
      MinSize: '0'
      DesiredCapacity: '1'

  RootRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"

  RolePolicies: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "root"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles: 
        - Ref: "RootRole"

Outputs:
  InstanceId:
    Description: ID de la instancia EC2 creada
    Value: !Ref AutoscalingGroup
  SecurityGroupId:
    Description: ID del grupo de seguridad creado
    Value: !Ref InstanceSecurityGroup
  LaunchTemplateName:
    Description: Nombre del launch template creado
    Value: !Ref LaunchTemplate
  IamInstanceProfileName:
    Description: Nombre del perfil de instancia IAM creado
    Value: !Ref IamInstanceProfile
  AMIId:
    Description: ID del AMI utilizado por la instancia EC2
    Value: !FindInMap [RegionAmiMap, !Ref "AWS::Region", Ub22Ami]